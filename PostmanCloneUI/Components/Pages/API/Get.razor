@page "/api/get"
@using System.ComponentModel.DataAnnotations
@using PostmanCloneLibrary
@inject IStatusModel Status
@rendermode InteractiveServer

<PageTitle>Postman Clone by Harri Honkanen - GET Method</PageTitle>

<h2 class="mb-0">GET Method</h2>
<h6 style="color: gray">Retrieving Data from APIs</h6>

<EditForm Model="Model" OnValidSubmit="Submit" FormName="Get">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">Url: </label>
        <InputText @bind-Value="Model!.Url" class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Message: </label>
        <InputTextArea @bind-Value="Model!.Message" class="form-control" rows="10" />
    </div>
    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

<div class="status-bar">@Status.StatusString</div>

@code {

    [SupplyParameterFromForm]
    public GetFormModel? Model { get; set; }
    
    private readonly IApiAccess api = new ApiAccess();

    private async Task Submit()
    {
        UpdateStatusString("Starting...");
        Model.Message = "";

        //Validate the API URL
        if(api.IsValidUrl(Model.Url) == false)
        {
            UpdateStatusString("Invalid URL");
            return;
        }

        try
        {
            UpdateStatusString("Calling API...");

            Model!.Message = await api.CallApiAsync(Model.Url);

            UpdateStatusString("Ready");
        }
        catch (Exception ex)
        {
            Model!.Message = "Error: " + ex.Message;
            UpdateStatusString("Error");
        }

    }

    protected override void OnInitialized()
    {
        Model ??= new();
        UpdateStatusString("Ready");
    }
    public class GetFormModel
    {
        [Required]
        public string? Url { get; set; }
        public string? Message { get; set; }
    }

    private void UpdateStatusString(string statusString)
    {
        Status.StatusString = statusString;
    }
}